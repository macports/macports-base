# -*- tcl -*-
# Graph tests - arc unsetweight
# Copyright (c) 2008 Andreas Kupries <andreas_kupries@users.sourceforge.net>
# All rights reserved.
# RCS: @(#) $Id: unsetweight.test,v 1.1 2008/10/11 23:23:48 andreas_kupries Exp $

# Syntax: graph arc unsetweight

# -------------------------------------------------------------------------
# Wrong # args: Missing, Too many

test graph-${impl}-${setimpl}-arc-unsetweight-1.0 {arc unsetweight, wrong#args, missing} {
    SETUP
    catch {mygraph arc unsetweight} res
    mygraph destroy
    set res
} [tmWrong {arc unsetweight} arc 0]

test graph-${impl}-${setimpl}-arc-unsetweight-1.1 {arc unsetweight, wrong#args, too many} {
    SETUP
    catch {mygraph arc unsetweight a b} res
    mygraph destroy
    set res
} [tmTooMany {arc unsetweight} arc]

# -------------------------------------------------------------------------
# Logical arguments checks and failures

test graph-${impl}-${setimpl}-arc-unsetweight-2.0 {arc unsetweight, missing arc} {
    SETUP
    catch {mygraph arc unsetweight a} res
    mygraph destroy
    set res
} [MissingArc $MY a]

# -------------------------------------------------------------------------
# Ok arguments.

test graph-${impl}-${setimpl}-arc-unsetweight-3.0 {arc unsetweight, arc missing weight} {
    SETUP
    mygraph node insert 0
    mygraph arc  insert 0 0 a
    set res [mygraph arc hasweight a]
    mygraph arc unsetweight a
    lappend res [mygraph arc hasweight a]
    mygraph destroy
    set res
} {0 0}

test graph-${impl}-${setimpl}-arc-unsetweight-3.1 {arc unsetweight, arc missing weight} {
    SETUP
    mygraph node insert 0
    mygraph arc  insert 0 0 a
    mygraph arc  setweight a 1
    set res [mygraph arc hasweight a]
    mygraph arc unsetweight a
    lappend res [mygraph arc hasweight a]
    mygraph destroy
    set res
} {1 0}

# -------------------------------------------------------------------------
