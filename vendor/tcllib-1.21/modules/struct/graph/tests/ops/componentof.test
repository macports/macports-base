# -*- tcl -*-
# Graph ops tests - Connected components II.
# Copyright (c) 2008-2010 Andreas Kupries <andreas_kupries@users.sourceforge.net>
# All rights reserved.
# RCS: @(#) $Id: componentof.test,v 1.4 2010/09/09 21:48:27 andreas_kupries Exp $

# Syntax: struct::graph::op::connectedComponentOf G

# -------------------------------------------------------------------------
# Wrong # args: Missing, Too many

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-1.0 {connectedComponentOf, wrong args, missing} -body {
    struct::graph::op::connectedComponentOf
} -returnCodes error -result [tcltest::wrongNumArgs struct::graph::op::connectedComponentOf {g n} 0]

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-1.1 {connectedComponentOf, wrong args, missing} -body {
    struct::graph::op::connectedComponentOf g
} -returnCodes error -result [tcltest::wrongNumArgs struct::graph::op::connectedComponentOf {g n} 1]

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-1.2 {connectedComponentOf, wrong args, too many} -body {
    struct::graph::op::connectedComponentOf g x y
} -returnCodes error -result [tcltest::tooManyArgs struct::graph::op::connectedComponentOf {g n}]

# -------------------------------------------------------------------------
# Logical arguments checks and failures

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-2.0 {connectedComponentOf, bad node} -setup {
    SETUP
} -body {
    struct::graph::op::connectedComponentOf mygraph foo
} -cleanup {
    mygraph destroy
} -returnCodes error -result {node "foo" does not exist in graph "mygraph"}

# -------------------------------------------------------------------------
# Ok arguments.

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.1 {connectedComponentOf, nodes, no arcs} -setup {
    SETUP
    mygraph node insert 0 1 2 3 4 5
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 0]
} -cleanup {
    mygraph destroy
} -result 0

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.2 {connectedComponentOf, single CC} -setup {
    SETUP_A
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 'node5']
} -cleanup {
    mygraph destroy
} -result {'node0' 'node1' 'node2' 'node3' 'node4' 'node5' 'node6'}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.3 {connectedComponentOf, single CC} -setup {
    SETUP_B
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph D]
} -cleanup {
    mygraph destroy
} -result {A B C D E S}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.4 {connectedComponentOf, single CC} -setup {
    SETUP_C
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph D]
} -cleanup {
    mygraph destroy
} -result {A B C D E F}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.5 {connectedComponentOf, single CC} -setup {
    SETUP_D
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph g]
} -cleanup {
    mygraph destroy
} -result {a b c d f g h i j}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.6 {connectedComponentOf, single CC} -setup {
    SETUP_E
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 5b]
} -cleanup {
    mygraph destroy
} -result {1b 1w 2b 2w 3b 3w 4b 4w 5b 5w 6b 6w 7b 7w 8b 8w}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.7 {connectedComponentOf, single CC} -setup {
    SETUP_F
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 2w]
} -cleanup {
    mygraph destroy
} -result {1b 1w 2b 2w 3b 3w 4b 4w}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.8 {connectedComponentOf, single CC} -setup {
    SETUP_G
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 3b]
} -cleanup {
    mygraph destroy
} -result {1b 1w 2b 2w 3b 3w 4b 4w 5b 5w}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.9 {connectedComponentOf, single CC} -setup {
    SETUP_H
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph C]
} -cleanup {
    mygraph destroy
} -result {A B C D E}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.10 {connectedComponentOf, single CC} -setup {
    SETUP_I
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph N4]
} -cleanup {
    mygraph destroy
} -result {N1 N2 N3 N4 N5}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.11.0 {connectedComponentOf, multiple CC} -setup {
    SETUP_J
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 4]
} -cleanup {
    mygraph destroy
} -result {1 4 5}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.11.1 {connectedComponentOf, multiple CC} -setup {
    SETUP_J
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 2]
} -cleanup {
    mygraph destroy
} -result 2

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.11.2 {connectedComponentOf, multiple CC} -setup {
    SETUP_J
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 3]
} -cleanup {
    mygraph destroy
} -result 3

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.11.3 {connectedComponentOf, multiple CC} -setup {
    SETUP_J
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph 6]
} -cleanup {
    mygraph destroy
} -result {6 7}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.12.0 {connectedComponentOf, multiple CC} -setup {
    SETUP_K
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph No3]
} -cleanup {
    mygraph destroy
} -result {No1 No2 No3 No4}

test graphop-t${treeimpl}-g${impl}-s${setimpl}-st${stkimpl}-q${queimpl}-connectedComponentOf-3.12.1 {connectedComponentOf, multiple CC} -setup {
    SETUP_K
} -body {
    lsort -dict [struct::graph::op::connectedComponentOf mygraph No5]
} -cleanup {
    mygraph destroy
} -result No5

# ---------------------------------------------------
